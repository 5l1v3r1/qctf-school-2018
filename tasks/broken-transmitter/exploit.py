#!/usr/bin/python3

import re
import requests

from time import sleep
from argparse import ArgumentParser


def get_args():
    parser = ArgumentParser()
    parser.add_argument('--url', help='server address (with http)', required=True)
    parser.add_argument('--token', help='your token', required=True)
    parser.add_argument('--timeout', help='timeout between requests (default 10)', type=int, default=10)
    return parser.parse_args()


if __name__ == '__main__':
    args = get_args()
    data = ''
    pattern = 'QCTF{.*?}'
    while not re.search(pattern, data):
        update = requests.get('%s/%s/' % (args.url, args.token)).text
        hexcode = re.search('\>([\w\s]*?)\<\/div', update).group(1)
        if not hexcode:
            continue
        text = ''.join([chr(int(code, 16)) for code in hexcode.split(' ')])
        if text not in data:
            data += text
        else:
            if not data.endswith(text):
                break
        sleep(args.timeout)
    print(data)
    print(re.search(pattern, data).group(0))
